{"ast":null,"code":"import _objectSpread from\"/home/luiggi/Documents/GitHub/react-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/luiggi/Documents/GitHub/react-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Wrapper from\"./components/Wrapper\";import Screen from\"./components/Screen\";import ButtonBox from\"./components/ButtonBox\";import Button from\"./components/Button\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var btnValues=[[\"C\",\"+-\",\"%\",\"/\"],[7,8,9,\"X\"],[4,5,6,\"-\"],[1,2,3,\"+\"],[0,\".\",\"=\"]];var toLocaleString=function toLocaleString(num){return String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g,\"$1 \");};var removeSpaces=function removeSpaces(num){return num.toString().replace(/\\s/g,\"\");};var App=function App(){var _useState=useState({sign:\"\",num:0,res:0}),_useState2=_slicedToArray(_useState,2),calc=_useState2[0],setCalc=_useState2[1];// numClickHandler function -The numClickHandler function gets triggered only if any of the number buttons (0–9) are pressed. \n// Then it gets the value of the Button and adds that to the current num value.\nvar numClickHandler=function numClickHandler(e){e.preventDefault();var value=e.target.innerHTML;if(removeSpaces(calc.num).length<16){setCalc(_objectSpread(_objectSpread({},calc),{},{num:calc.num===0&&value===\"0\"?\"0\":removeSpaces(calc.num)%1===0?toLocaleString(Number(removeSpaces(calc.num+value))):toLocaleString(calc.num+value),res:!calc.sign?0:calc.res}));}};// numClickHandler function - adds the decimal point to the current num value, making it a decimal number.\nvar commaClickHandler=function commaClickHandler(e){e.preventDefault();var value=e.target.innerHTML;setCalc(_objectSpread(_objectSpread({},calc),{},{num:!calc.num.toString().includes(\".\")?calc.num+value:calc.num}));};// commaClickHandler function - The signClickHandler function gets fired when the user press either +, –, * or /. \n// The particular value is then set as a current sign value in the calc object.\nvar signClickHandler=function signClickHandler(e){e.preventDefault();var value=e.target.innerHTML;setCalc(_objectSpread(_objectSpread({},calc),{},{sign:value,res:!calc.res&&calc.num?calc.num:calc.res,num:0}));};// signClickHandler function - The equalsClickHandler function calculates the result when the equals button (=) is pressed. \n// The calculation is based on the current num and res value, as well as the sign selected (see the math function).\nvar equalsClickHandler=function equalsClickHandler(){if(calc.sign&&calc.num){var math=function math(a,b,sign){return sign===\"+\"?a+b:sign===\"-\"?a-b:sign===\"X\"?a*b:a/b;};setCalc(_objectSpread(_objectSpread({},calc),{},{res:calc.num===\"0\"&&calc.sign===\"/\"?\"Can't divide with 0\":toLocaleString(math(Number(removeSpaces(calc.res)),Number(removeSpaces(calc.num)),calc.sign)),sign:\"\",num:0}));}};// equalsClickHandler function\n// The invertClickHandler function first checks if there’s any entered value (num) or calculated value (res) and then inverts them by multiplying with -1:\nvar invertClickHandler=function invertClickHandler(){setCalc(_objectSpread(_objectSpread({},calc),{},{num:calc.num?toLocaleString(removeSpaces(calc.num)*-1):0,res:calc.res?toLocaleString(removeSpaces(calc.res)*-1):0,sign:\"\"}));};// invertClickHandler function - The percentClickHandler function checks if there’s any entered value (num) or calculated value (res) and \n// then calculates the percentage using the built-in Math.pow function, which returns the base to the exponent power:\nvar percentClickHandler=function percentClickHandler(){var num=calc.num?parseFloat(removeSpaces(calc.num)):0;var res=calc.res?parseFloat(removeSpaces(calc.res)):0;setCalc(_objectSpread(_objectSpread({},calc),{},{num:num/=Math.pow(100,1),res:res/=Math.pow(100,1),sign:\"\"}));};// percentClickHandler function - The resetClickHandler function defaults all the initial values of calc, returning \n// the calc state as it was when the Calculator app was first rendered:\nvar resetClickHandler=function resetClickHandler(){setCalc(_objectSpread(_objectSpread({},calc),{},{sign:\"\",num:0,res:0}));};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"casio\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CASIO\"}),/*#__PURE__*/_jsx(\"p\",{className:\"upper\",children:\"ELETRONIC CALCULATOR\"}),/*#__PURE__*/_jsx(\"p\",{children:\"HL-815L\"})]}),/*#__PURE__*/_jsx(Screen,{value:calc.num?calc.num:calc.res}),/*#__PURE__*/_jsx(ButtonBox,{children:// Flat() inserts all btn values inside a single array, map goes through them and returns a button with the required key, className, value and onClick properties\nbtnValues.flat().map(function(btn,i){return/*#__PURE__*/_jsx(Button,{// Notice exception for the \"=\" operator to be a \"equals\" string\nclassName:btn===\"C\"?\"reset\":btn===\"+-\"?\"plusminus\":btn===\"%\"?\"percent\":btn===\"/\"?\"divide\":btn===\"X\"?\"multiply\":btn===\"-\"?\"minus\":btn===\"+\"?\"plus\":btn===\"=\"?\"equals\":btn===\".\"?\"decimal\":\"\",value:btn,onClick:btn===\"C\"?resetClickHandler:btn===\"+-\"?invertClickHandler:btn===\"%\"?percentClickHandler:btn===\"=\"?equalsClickHandler:btn===\"/\"||btn===\"X\"||btn===\"-\"||btn===\"+\"?signClickHandler:btn===\".\"?commaClickHandler:numClickHandler},i);})})]});};export default App;","map":{"version":3,"sources":["/home/luiggi/Documents/GitHub/react-calculator/src/App.js"],"names":["React","useState","Wrapper","Screen","ButtonBox","Button","btnValues","toLocaleString","num","String","replace","removeSpaces","toString","App","sign","res","calc","setCalc","numClickHandler","e","preventDefault","value","target","innerHTML","length","Number","commaClickHandler","includes","signClickHandler","equalsClickHandler","math","a","b","invertClickHandler","percentClickHandler","parseFloat","Math","pow","resetClickHandler","flat","map","btn","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Screen from \"./components/Screen\";\nimport ButtonBox from \"./components/ButtonBox\";\nimport Button from \"./components/Button\";\n\n\nconst btnValues = [\n  [\"C\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nconst toLocaleString = (num) =>\n  String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\nconst removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\n\nconst App = () => {\n\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0,\n  });\n    \n  // numClickHandler function -The numClickHandler function gets triggered only if any of the number buttons (0–9) are pressed. \n  // Then it gets the value of the Button and adds that to the current num value.\n  const numClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num).length < 16) {\n      setCalc({\n        ...calc,\n        num:\n          calc.num === 0 && value === \"0\"\n            ? \"0\"\n            : removeSpaces(calc.num) % 1 === 0\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\n            : toLocaleString(calc.num + value),\n        res: !calc.sign ? 0 : calc.res,\n      });\n    }\n  };\n\n  // numClickHandler function - adds the decimal point to the current num value, making it a decimal number.\n  const commaClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\n    });\n  };\n\n  // commaClickHandler function - The signClickHandler function gets fired when the user press either +, –, * or /. \n  // The particular value is then set as a current sign value in the calc object.\n  const signClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      sign: value,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0,\n    });\n  };\n\n  // signClickHandler function - The equalsClickHandler function calculates the result when the equals button (=) is pressed. \n  // The calculation is based on the current num and res value, as well as the sign selected (see the math function).\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) =>\n        sign === \"+\"\n          ? a + b\n          : sign === \"-\"\n          ? a - b\n          : sign === \"X\"\n          ? a * b\n          : a / b;\n\n      setCalc({\n        ...calc,\n        res:\n          calc.num === \"0\" && calc.sign === \"/\"\n            ? \"Can't divide with 0\"\n            : toLocaleString(\n                math(\n                  Number(removeSpaces(calc.res)),\n                  Number(removeSpaces(calc.num)),\n                  calc.sign\n                )\n              ),\n        sign: \"\",\n        num: 0,\n      });\n    }\n  };\n\n  // equalsClickHandler function\n  // The invertClickHandler function first checks if there’s any entered value (num) or calculated value (res) and then inverts them by multiplying with -1:\n  const invertClickHandler = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\",\n    });\n  };\n\n  // invertClickHandler function - The percentClickHandler function checks if there’s any entered value (num) or calculated value (res) and \n  // then calculates the percentage using the built-in Math.pow function, which returns the base to the exponent power:\n  const percentClickHandler = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n\n    setCalc({\n      ...calc,\n      num: (num /= Math.pow(100, 1)),\n      res: (res /= Math.pow(100, 1)),\n      sign: \"\",\n    });\n  };\n\n  // percentClickHandler function - The resetClickHandler function defaults all the initial values of calc, returning \n  // the calc state as it was when the Calculator app was first rendered:\n  const resetClickHandler = () => {\n    setCalc({\n      ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0,\n    });\n  };\n\n  return (\n    <Wrapper>\n      <div className=\"casio\">\n        <h3>CASIO</h3>\n        <p className=\"upper\">ELETRONIC CALCULATOR</p>\n        <p>HL-815L</p>\n      </div>\n      <Screen value={calc.num ? calc.num : calc.res} />\n      <ButtonBox>\n        {\n          // Flat() inserts all btn values inside a single array, map goes through them and returns a button with the required key, className, value and onClick properties\n          btnValues.flat().map((btn, i) => {\n            return (\n              <Button\n                key={i}\n                // Notice exception for the \"=\" operator to be a \"equals\" string\n                className={\n                    btn === \"C\" \n                  ? \"reset\"\n                  : btn === \"+-\" \n                  ? \"plusminus\"\n                  : btn === \"%\" \n                  ? \"percent\"\n                  : btn === \"/\" \n                  ? \"divide\"\n                  : btn === \"X\" \n                  ? \"multiply\"\n                  : btn === \"-\" \n                  ? \"minus\"\n                  : btn === \"+\" \n                  ? \"plus\"\n                  : btn === \"=\" \n                  ? \"equals\" \n                  : btn === \".\" \n                  ? \"decimal\"\n                  : \"\" \n                }\n                value={btn}\n                onClick={\n                    btn === \"C\"\n                    ? resetClickHandler\n                    : btn === \"+-\"\n                    ? invertClickHandler\n                    : btn === \"%\"\n                    ? percentClickHandler\n                    : btn === \"=\"\n                    ? equalsClickHandler\n                    : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n                    ? signClickHandler\n                    : btn === \".\"\n                    ? commaClickHandler\n                    : numClickHandler\n                }\n              />\n            );\n          })\n        }\n      </ButtonBox>\n    </Wrapper>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}